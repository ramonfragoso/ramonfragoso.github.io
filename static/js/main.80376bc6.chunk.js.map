{"version":3,"sources":["images/zanky.png","images/pre.png","images/pg.png","components/Header/styles.js","components/Header/index.js","components/Content/styles.js","components/Content/Personal/styles.js","components/Content/Personal/index.js","components/Content/index.js","styles.js","App.js","registerServiceWorker.js","index.js","images/prof_pic.jpg"],"names":["module","exports","StyledHeader","styled","div","ImageContainer","Image","img","Info","Title","Subtitle","Link","a","Header","src","prof_pic","style","color","href","target","download","StyledContent","CheckTitle","WorkTitleContainer","WorkTitle","Line","Emoji","Container","StyledProject","Item","projects","pre","description","github","url","year","pg","zanky","Project","onClick","window","open","Personal","map","project","key","Content","document","getElementById","scrollIntoView","behavior","id","StyledApp","GlobalStyle","createGlobalStyle","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.80376bc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zanky.9f87ff07.png\";","module.exports = __webpack_public_path__ + \"static/media/pre.7760c2b7.png\";","module.exports = __webpack_public_path__ + \"static/media/pg.ef61e466.png\";","import styled from 'styled-components';\n\n\nexport const StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    padding-left: 10%;\n    padding-right: 10%;\n    margin-top: 2%;\n    color: #ffffff;\n    \n    @media (max-width: 800px) {\n        padding: 5%;\n    }\n    \n    @media (max-width: 800px ) {\n        flex-direction: column;\n    };\n\n`;\n\nexport const ImageContainer = styled.div`\n    background-color: #ff00ea;\n    width: 350px;\n    height: 350px;\n\n    @media (max-width: 800px ) {\n        width: 90%;\n        height: 90%;\n    };\n\n    margin-right: 50px;\n`;\n\nexport const Image = styled.img`\n\n    transition: ease-in-out 0.2s;\n    transform:translate(10px, -10px);\n\n    &:hover {\n    transform:translate(20px, -20px);\n    }\n    max-width: 100%;\n    max-height: 100%;\n`;\n\nexport const Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    \n`;\n\nexport const Title = styled.div`\n    font-size: 500%;\n    text-shadow: -3px 2px 0px #ff8000;\n`;\n\nexport const Subtitle = styled.div`\n    font-size: 200%;\n    margin: 5px;\n`;\n\nexport const Link = styled.a`\n    color: #ff00ea;\n\n    @media (max-width: 800px ) {\n        font-size: 75%;\n    };\n\n    \n`;\n","import React from 'react';\nimport { StyledHeader, Title, ImageContainer, Image, Info, Subtitle, Link } from './styles';\nimport prof_pic from '../../images/prof_pic.jpg';\n\nconst Header = () => {\n\n  return(\n    <StyledHeader>\n      <ImageContainer>\n        <Image src={prof_pic}/>\n      </ImageContainer>\n      <Info>\n        <Title>Ramon Fragoso</Title>\n        <Subtitle>Software Developer</Subtitle>\n        <Subtitle>CS Major</Subtitle>\n        <Subtitle>Visit my Github: <Link style={{color: '#ff00ea'}} href=\"https://github.com/ramonfragoso\" target=\"_blank\">https://github.com/ramonfragoso</Link></Subtitle>\n        <Subtitle>Download my&nbsp;  \n          <a style={{\n          color: '#ff00ea'\n          }} href={prof_pic} download>CV</a></Subtitle>\n      </Info>\n    </StyledHeader>\n  );\n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const StyledContent = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n\n    justify-content: center;\n    padding: 30px 10% 30px 50px;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const CheckTitle = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: row;\n    font-size: 200%;\n    color: #515151;\n    padding: 0;\n\n`;\n\nexport const WorkTitleContainer = styled.div`\n    background-color: #00ffea;\n    margin-left: 10px;\n`;\n\nexport const WorkTitle = styled.div`\n\n    &:hover {\n        transform:translate(5px, -5px);\n        cursor: pointer;\n    } \n    transition: ease-in-out 0.2s;\n    background-color: #ff00ea;\n    color: white;\n    padding: 7px;\n    text-shadow: -2px 2px 0px black;\n`;\n\nexport const Title = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    font-size: 450%;\n    text-shadow: -2px 2px 0px #00ffea;\n    color: white;\n\n`;\n\nexport const Line = styled.div`\n    height: 70px;\n    width: 20%;\n    background-color: #00ffea;\n`;\n\nexport const Emoji = styled.div`\n    font-size: 300%;\n    &:hover {\n        cursor: pointer;\n    } \n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-around;\n\n    @media (max-width: 800px ) {\n        flex-direction: column;\n        justify-content: center;\n        padding: 0px;\n    };\n\n    padding: 20px 10% 20px 20px;\n`;\n\nexport const StyledProject = styled.div`\n    padding-top: 50px;\n    width:300px;\n    color: white;\n`;\n\nexport const ImageContainer = styled.div`\n    background-color: #00FFEA;\n    width: 300px;\n    height: 300px;\n    \n    &:hover {\n        cursor: pointer;\n    }\n\n    @media (max-width: 800px ) {\n        width: 90%;\n        height: 90%;\n    };\n`;\n\nexport const Image = styled.img`\n\n    transition: transform 0.2s, filter 1s;\n    filter: grayscale(1);\n\n    &:hover {\n        transform:translate(5px, -5px);\n        filter: none;\n    }\n    max-width: 100%;\n    max-height: 100%;\n`;\n\nexport const Item = styled.div`\n    margin:10px 0px;\n    padding-left: 5px;\n    border-left: solid 4px #00FFEA;\n`;\n","import React from 'react';\nimport { Container, StyledProject, ImageContainer, Image, Item, Github, Url, Year } from './styles';\nimport styled from 'styled-components';\nimport zanky from '../../../images/zanky.png';\nimport pre from '../../../images/pre.png';\nimport pg from '../../../images/pg.png';\n\nconst projects = [\n    {\n        src: pre,\n        description: \"This was my first React project, made for a college class. The objective was to the college director to manage the number of openings for classes before the period starts.\",\n        github: \"https://github.com/ramonfragoso/sistema-de-pre-matricula\",\n        url: \"http://prematricula-ufcg.surge.sh/\",\n        year: 2018,\n    },\n    {\n        src: pg,\n        description: \"This website was made in an anti-corruption themed Hackathon, and it has the objective to show the data acquired for the app built during the hackathon.\",\n        github: \"https://github.com/ramonfragoso/politicosGoSite\",\n        url: \"https://politicosgo.surge.sh/\",\n        year: 2018,\n    },    \n    {\n        src: zanky,\n        description: \"This project was a 'youtube like' website, but for anime. It was made in React, for the Software Engineer class in college. The website backend is currently deactivated, that is why there is no content.\",\n        github: \"https://github.com/viniciuslacerda0/Frontend-Es\",\n        url: \"http://zanky.surge.sh/\",\n        year: 2018,\n    },\n]\nconst Personal = () => {\n\n    return (\n        <Container>\n            {projects.map(project => \n                <Project \n                key={project.github}\n                src={project.src}\n                description={project.description}\n                github={project.github}\n                url={project.url}\n                year={project.year}\n                />\n            )}\n        </Container>\n    )\n}\n\nconst Project = ({src, description, github, url, year}) => {\n    return (\n        <StyledProject>\n            <ImageContainer>\n                <Image src={src} onClick={() => window.open(github, '_blank')}/>\n            </ImageContainer>\n            <Item>\n                {description}\n            </Item>\n            <Item>\n                Github: <a target=\"_blank\" href={github}>{github}</a>\n            </Item>\n            {url ? \n            <Item>\n                Link: <a target=\"_blank\" href={url}>{url}</a>\n            </Item> \n            : null}\n            <Item>\n                Year: {year}\n            </Item>\n        </StyledProject>\n    )\n}\n\nexport default Personal;","import React from 'react';\nimport { StyledContent, Title, CheckTitle, WorkTitle, WorkTitleContainer, Line, Emoji } from './styles';\nimport Personal from './Personal';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    padding-left: 10%;\n    @media (max-width: 800px) {\n        padding: 5%;\n    }\n`;\n\nconst Content = () => {\n\n    const onClick = () => {\n        window.document.getElementById('personal').scrollIntoView({behavior: \"smooth\"});\n    }\n\n    return (\n        <Container>\n            <StyledContent>\n                <CheckTitle >\n                    Check my \n                    <WorkTitleContainer onClick={onClick}>\n                        <WorkTitle>work</WorkTitle>\n                    </WorkTitleContainer>\n                </CheckTitle>\n                <Emoji onClick={onClick}>&#128071;</Emoji>\n            </StyledContent>\n            <Title id='personal'>\n                Personal Projects\n                <Line/>\n            </Title>\n            <Personal/>\n        </Container>\n    )\n}\n\nexport default Content;","import styled from 'styled-components';\n\nexport const StyledApp = styled.div`\n  /* padding-left: 10%;\n  padding-right: 10%; */\n  padding-top: 3%;\n\n  background: black;\n  @media (max-width: 800px) {\n    /* padding: 5%;\n    height: 100% */\n\n  }\n`;","import React, { Component } from 'react';\nimport Header from './components/Header/index';\nimport Content from './components/Content/index';\nimport { StyledApp } from './styles';\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #app, #app>div {\n    font-family: 'Roboto Slab', serif;\n    height: 100%\n}\n`\nconst App = () => {\n    return (\n      <StyledApp>\n        <Header/>\n        <Content/>\n        <GlobalStyle/>\n      </StyledApp>\n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/prof_pic.27d1019a.jpg\";"],"sourceRoot":""}